################################################################################
#
# NOTIFICATION COMMANDS
#
################################################################################
################################################################################


# 'notify-host-by-email' command definition
define command{
	command_name	notify-host-by-email
	command_line	/usr/bin/printf "%b" "***** Nagios *****\n\nNotification Type: $NOTIFICATIONTYPE$\nHost: $HOSTNAME$\nState: $HOSTSTATE$\nAddress: $HOSTADDRESS$\nInfo: $HOSTOUTPUT$\nAuthor: $NOTIFICATIONAUTHOR$ ($NOTIFICATIONCOMMENT$)\n\nDate/Time: $LONGDATETIME$\n\nGetSmart: http://getsmart.gwn/display/FAC/$HOSTGROUPNAME$\n" | /usr/bin/mail -s "$HOSTGROUPNAME$: ** $NOTIFICATIONTYPE$: Host $HOSTNAME$ is $HOSTSTATE$ **" "$CONTACTEMAIL$"
	}

# Notify host by RocketChat
define command{
	command_name	notify-host-by-chat
	command_line	/usr/bin/curl -X POST -H 'Content-Type: application/json' --data '{"type": "$NOTIFICATIONTYPE$", "class": "host", "hostname":"$HOSTNAME$", "ip": "$HOSTADDRESS$", "state": "$HOSTSTATE$", "details": "$HOSTOUTPUT$"}' https://chat.getwellnetwork.com/hooks/eSsCGFAekyymXFA2r/P2TskmxMB4oWeB2QE57kHNaYksT5Cpy9vWovpzBRA7dJoCMr
	}
define command{
	command_name	notify-host-by-chat-t2
	command_line	/usr/bin/curl -X POST -H 'Content-Type: application/json' --data '{"type": "$NOTIFICATIONTYPE$", "class": "host", "hostname":"$HOSTNAME$", "ip": "$HOSTADDRESS$", "state": "$HOSTSTATE$", "details": "$HOSTOUTPUT$"}' https://chat.getwellnetwork.com/hooks/BCG9heXc28CLgdpnB/XWqfHadj9ZtrWZaytJwsMavLwyiYZJDccgCC9HxpjHPGazmS
	}



# 'notify-service-by-email' command definition (NEW - http://jira.gwn/browse/PLATSUP-14775)
define command{
	command_name	notify-service-by-email
       command_line    /usr/bin/printf "%b" "***** Nagios *****\n\nNotification Type: $NOTIFICATIONTYPE$\n\nService: $SERVICEDESC$\nHost: $HOSTALIAS$\nAddress: $HOSTADDRESS$\nState: $SERVICESTATE$\nAuthor: $NOTIFICATIONAUTHOR$ ($NOTIFICATIONCOMMENT$)\n\nDate/Time: $LONGDATETIME$\n\nAdditional Info:\n\n$SERVICEOUTPUT$\n$SERVICEPERFDATA$\n\n$LONGSERVICEOUTPUT$\n\nGetSmart: http://getsmart.gwn/display/FAC/$HOSTGROUPNAME$" | /usr/bin/mail -s "$HOSTGROUPNAME$: ** $NOTIFICATIONTYPE$: $HOSTALIAS$/$SERVICEDESC$ is $SERVICESTATE$ **" "$CONTACTEMAIL$"
	}

# Notify service by RocketChat
define command{
	command_name	notify-service-by-chat
	command_line	/usr/bin/curl -X POST -H 'Content-Type: application/json' --data '{"type": "$NOTIFICATIONTYPE$", "class": "service", "hostname":"$HOSTNAME$", "ip": "$HOSTADDRESS$", "desc": "$SERVICEDESC$", "state": "$SERVICESTATE$", "details": "$SERVICEOUTPUT$"}' https://chat.getwellnetwork.com/hooks/eSsCGFAekyymXFA2r/P2TskmxMB4oWeB2QE57kHNaYksT5Cpy9vWovpzBRA7dJoCMr
	}
define command{
	command_name	notify-service-by-chat-t2
	command_line	/usr/bin/curl -X POST -H 'Content-Type: application/json' --data '{"type": "$NOTIFICATIONTYPE$", "class": "service", "hostname":"$HOSTNAME$", "ip": "$HOSTADDRESS$", "desc": "$SERVICEDESC$", "state": "$SERVICESTATE$", "details": "$SERVICEOUTPUT$"}' https://chat.getwellnetwork.com/hooks/BCG9heXc28CLgdpnB/XWqfHadj9ZtrWZaytJwsMavLwyiYZJDccgCC9HxpjHPGazmS
	}



################################################################################
################################################################################
#
# HOST CHECK COMMANDS
#
################################################################################
################################################################################

# Decrepated:
#define command {
#	command_name	gwn-check-rsap
#	command_line	$USER1$/check_nrpe -H $HOSTADDRESS$ -u -t 40 -c gwn_check_rsap
#}

define command {
	command_name	gwn-multi-core
	command_line	$USER1$/check_nrpe -H $HOSTADDRESS$ -c overall_cpu
}

define command {
	command_name	check-cmts
	command_line	$USER1$/check_http -H $HOSTADDRESS$ -a admin:c9networks -u "/main.asp" -l -R "c9 networks" -A "Mozilla/4.0 (compatible, MSIE 7.0, Windows NT 6.0)"
}


define command {
	command_name	gwn-check-swraid
	command_line	$USER1$/check_nrpe -H $HOSTADDRESS$ -u -t 40 -c gwn_check_swraid
}


define command {
	command_name	gwn-check-jboss-files
	command_line	$USER1$/check_nrpe -H $HOSTADDRESS$ -c gwn_check_jboss_open_files -t 40
}

define command {
	command_name	gwn-check-perc4raid
	command_line	$USER1$/check_nrpe -H $HOSTADDRESS$ -u -t 40 -c gwn_check_perc4raid
}



define command {
	command_name	gwn-check-perc5raid
	command_line	$USER1$/check_nrpe -H $HOSTADDRESS$ -u -t 40 -c gwn_check_perc5raid
}


define command {
	command_name	gwn-check-percraid
	command_line	$USER1$/check_nrpe -H $HOSTADDRESS$ -u -t 40 -c gwn_check_percraid
}


define command {
	command_name	gwn-parse-log
	command_line	$USER1$/check_nrpe -H $HOSTADDRESS$ -u -t 40 -c gwn_parse_log -a $ARG1$ $ARG2$
}



# Check a remote MySQL server

define command {
	command_name	check-mysql
	command_line	$USER1$/check_mysql -H $HOSTADDRESS$ -u $ARG1$ -p$ARG2$
}


define command {
	command_name	check-mysql-nrpe
	command_line	$USER1$/check_nrpe -H $HOSTADDRESS$ -u -t 40 -c gwn_check_mysql -a $ARG1$ $ARG2$
}

# Check remote server load

define command {
	command_name	check-load
	command_line	$USER1$/check_nrpe -H $HOSTADDRESS$ -u -t 40 -c check_load -a $ARG1$ $ARG2$ $ARG3$
}

# Check remote server load based on core count

define command {
	command_name	check-load-percpu
	command_line	$USER1$/check_nrpe -H $HOSTADDRESS$ -u -t 40 -c check_load_percpu -a $ARG1$ $ARG2$ $ARG3$
}

# Check remote ntpd

define command {
	command_name	check-ntp
	command_line	$USER1$/check_ntp -H $HOSTADDRESS$ -4
}

define command {
	command_name	check-ntp-nrpe
	command_line	$USER1$/check_nrpe -H $HOSTADDRESS$ -u -t 40 -c check_ntp -a $ARG1$ $ARG2$ $ARG3$
}

define command {
	command_name	check-wildfly
	command_line	$USER1$/check_nrpe -H $HOSTADDRESS$ -c check_wildfly -a $ARG1$
}

# check mobileremote url specified returns valid content
define command {
	command_name	check_mobile_url
	command_line	$USER1$/check_http -t 60 -H $HOSTADDRESS$ -u $ARG1$ -e $ARG2$
}

# Check remote dns

define command {
	command_name	check-dns
	command_line	$USER1$/check_dns -s $HOSTADDRESS$ -t 40 -H www.getwellnetwork.com -a 52.54.81.8
#	command_line	$USER1$/check_dns -s $HOSTADDRESS$ -t 40 -H www.getwellnetwork.com -a 216.70.90.149
#	command_line	$USER1$/check_dns -s $HOSTADDRESS$ -t 40 -H www.getwellnetwork.com -a 174.143.111.149
#	command_line	$USER1$/check_dns -s $HOSTADDRESS$ -t 40 -H dirkgassen.com -a 72.249.126.183
}


define command {
	command_name	check-dns-nrpe
	command_line	$USER1$/check_nrpe -H $HOSTADDRESS$ -u -t 40 -c check_dns -a $ARG1$ $ARG2$
}


# Check remote JBoss

define command {
	command_name	check-jboss
	command_line	$USER1$/check_http --verbose-H $HOSTADDRESS$ -u "/GWN/version.txt" -s "GWN:" -w 15 -c 20
}

define command {
	command_name	check-jboss-log
	command_line	$USER1$/check_nrpe -H $HOSTADDRESS$ -u -t 60 -c check_jboss_log
}


# Check remote PLS application

define command {
	command_name	check-app
	command_line	$USER1$/gwn_check_app $HOSTADDRESS$ $ARG1$ $ARG2$ $ARG3$ $ARG4$
}


define command {
	command_name	check-webservice
	command_line	$USER1$/gwn_check_webservice $HOSTADDRESS$ $ARG1$ $ARG2$ $ARG3$
}


define command {
	command_name	check-sysinfo
	command_line	$USER1$/gwn_check_sysinfo $HOSTADDRESS$ $ARG1$ $ARG2$ $ARG3$ $ARG4$ $ARG5$
}

define command { 
	command_name	check-hosted-service-activity-log
	command_line    $USER1$/gwn_check_hosted_service_activity_log $ARG1$ $ARG2$ $ARG3$ $ARG4$
}

define command {
        command_name    check-ras
        command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -u -t 40 -c gwn_check_ras
}


# Check remote disk space

define command {
	command_name	check_disk
	command_line	$USER1$/check_nrpe -H $HOSTADDRESS$ -u -t 40 -c check_disk -a $ARG1$ $ARG2$ $ARG3$
}

# Check remote swap utilization

define command {
        command_name    check_swap
        command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -u -t 40 -c check_swap -a $ARG1$ $ARG2$
}


# Check remote processes

define command {
	command_name	check-procs
	command_line	$USER1$/check_nrpe -H $HOSTADDRESS$ -u -t 60 -c check_procs -a $ARG1$
}

define command {
	command_name	check-procs-all
	command_line	$USER1$/check_nrpe -H $HOSTADDRESS$ -u -t 60 -c check_procs_all
}

define command {
	command_name 	check-ram-free
	command_line	$USER1$/check_nrpe -H $HOSTADDRESS$ -u -t 60 -c check_ram_free
}

define command {
	command_name	check-salt-minion
	command_line	$USER1$/check_nrpe -H $HOSTADDRESS$ -u -t 60 -c check_procs -a salt-minion
}

define command {
	command_name	check_crossbar-controller
	command_line	$USER1$/check_nrpe -H $HOSTADDRESS$ -u -t 60 -c check_crossbar -a $ARG1$ $ARG2$ $ARG3$
}

define command {
  command_name  check_crossbar-worker
  command_line  $USER1$/check_nrpe -H $HOSTADDRESS$ -u -t 60 -c check_crossbar -a $ARG1$ $ARG2$ $ARG3$
}

define command {
	command_name	check_unscd
	command_line	$USER1$/check_nrpe -H $HOSTADDRESS$ -u -t 60 -c check_procs -a nscd
}

define command {
  command_name  check_nslcd
  command_line  $USER1$/check_nrpe -H $HOSTADDRESS$ -u -t 60 -c check_procs -a nslcd
}

# Check remote VIDTCP

define command {
	command_name	check-vidtcp
	command_line	$USER1$/gwn_check_vidtcp $HOSTADDRESS$
}


# Check remote vlc via DESCRIBE query
define command {
	command_name	check-vlc-describe
	command_line	$USER1$/gwn_check_vlc $HOSTADDRESS$ 5554
}


# Send arbitrary SQL to a server and base the result on parameter s
define command {
	command_name	check-sql-query
	command_line	$USER1$/gwn_check_sql $HOSTADDRESS$ $ARG1$ $ARG2$ $ARG3$
}


# Check the status of the APC UPS
define command {
	command_name	check-apcups
	command_line	$USER1$/check_nrpe -H $HOSTADDRESS$ -u -t 40 -c gwn_check_apcups
}



# Check the status of the IP-KVM 
define command {
	command_name	check-ipkvm
	command_line	$USER1$/gwn_check_ipkvm $HOSTADDRESS$
}


define command {
	command_name	check-jana
	command_line	$USER1$/gwn_check_jana $HOSTADDRESS$
}


define command {
	command_name    check-mailq
	command_line    $USER1$/check_nrpe -H $HOSTNAME$ -u -t 40 -c check_mailq -a $ARG1$ $ARG2$
}

define command {
  command_name    check-mailq-nagios
  command_line    $USER1$/check_mailq -w $ARG1$ -c $ARG2$
}

define command {
	command_name    check-smtpd
	command_line    $USER1$/check_nrpe -H $HOSTNAME$ -u -t 40 -c check_smtpd
}


# CMM HTTP services
define command {
        command_name    check_http_services
        command_line    $USER1$/check_http -t 30 -H $ARG1$ -u $ARG2$ -w $ARG3$ -c $ARG4$
}

# Jira/Getsmart HTTP services
define command {
        command_name    check_http_jirags
        command_line    $USER1$/check_http -H $ARG1$ -w $ARG2$ -c $ARG3$
}

#Check ESM REST API
define command {
	command_name	check_esm
	command_line	$USER1$/gwn_check_esm
}

# This command checks to see if a host is "alive" by pinging it
# The check must result in a 100% packet loss or 5 second (5000ms) round trip 
# average time to produce a critical error.
# Note: Five ICMP echo packets are sent (determined by the '-p 5' argument)

# 'check-host-alive' command definition
define command{
        command_name    check-host-alive
        command_line    $USER1$/check_icmp -H $HOSTADDRESS$ -w 3000.0,80% -c 5000.0,100% -p 5
        }


define command{
        command_name    check-host-alive-port
        command_line    $USER1$/check_tcp -H $HOSTADDRESS$ -p 80 -w 3 -c 5 -4
        }

define command{
	command_name	check-ssh
	command_line	$USER1$/check_ssh $HOSTADDRESS$
}

define command {
     command_name check_https
     command_line $USER1$/check_http -t 180 -S -H $HOSTADDRESS$ -e 200,302,301
}

define command {
     command_name check_mc_alive_https
     command_line $USER1$/check_http -t 180 -S -H $HOSTADDRESS$ -u https://appserver.gwn/Admin -e 200,302,301
}

define command {
     command_name check_mc_alive_http
     command_line $USER1$/check_http -t 180 -H $HOSTADDRESS$ -u http://$HOSTADDRESS$/Admin -e 200,302,301
}

define command {
     command_name check_https_401
     command_line $USER1$/check_http -t 120 -S -H $HOSTADDRESS$ -e 200,302,301,401
}

################################################################################
################################################################################
#
# SERVICE CHECK COMMANDS
#
################################################################################
################################################################################

# 'check_local_disk' command definition
define command{
        command_name    check_local_disk
        command_line    $USER1$/check_disk -w $ARG1$ -c $ARG2$ -p $ARG3$
        }


# 'check_local_load' command definition
define command{
        command_name    check_local_load
        command_line    $USER1$/check_load -w $ARG1$ -c $ARG2$
        }


# 'check_local_procs' command definition
define command{
        command_name    check_local_procs
        command_line    $USER1$/check_procs -w $ARG1$ -c $ARG2$ -s $ARG3$
        }


# 'check_local_users' command definition
define command{
        command_name    check_local_users
        command_line    $USER1$/check_users -w $ARG1$ -c $ARG2$
        }


# 'check_local_swap' command definition
define command{
	command_name	check_local_swap
	command_line	$USER1$/check_swap -w $ARG1$ -c $ARG2$
	}


# 'check_local_mrtgtraf' command definition
define command{
	command_name	check_local_mrtgtraf
	command_line	$USER1$/check_mrtgtraf -F $ARG1$ -a $ARG2$ -w $ARG3$ -c $ARG4$ -e $ARG5$
	}


################################################################################
# NOTE:  The following 'check_...' commands are used to monitor services on
#        both local and remote hosts.
################################################################################

# 'check_ftp' command definition
define command{
        command_name    check_ftp
        command_line    $USER1$/check_ftp -H $HOSTADDRESS$ $ARG1$
        }


# 'check_hpjd' command definition
#define command{
#        command_name    check_hpjd
#        command_line    $USER1$/check_hpjd -H $HOSTADDRESS$ $ARG1$
#        }


# 'check_snmp' command definition
#define command{
#        command_name    check_snmp
#        command_line    $USER1$/check_snmp -H $HOSTADDRESS$ $ARG1$
#        }


# 'check_http' command definition
define command{
        command_name    check_http
        command_line    $USER1$/check_http -t 30 -I $HOSTADDRESS$ $ARG1$
        }


# 'check_ssh' command definition
#define command {
#	command_name	check_ssh
#	command_line	$USER1$/check_ssh $ARG1$ $HOSTADDRESS$
#}


# 'check_dhcp' command definition
#define command {
#	command_name	check_dhcp
#	command_line	$USER1$/check_dhcp $ARG1$
#}


# 'check_ping' command definition
#define command{
#        command_name    check_ping
#        command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w $ARG1$ -c $ARG2$ -p 5
#        }


# 'check_pop' command definition
#define command{
#        command_name    check_pop
#        command_line    $USER1$/check_pop -H $HOSTADDRESS$ $ARG1$
#        }


# 'check_imap' command definition
define command{
        command_name    check_imap
	command_line	$USER1$/gwn_check_imap2 $HOSTADDRESS$ $ARG1$ $ARG2$ $ARG3$ $ARG4$ $ARG5$
        }


# 'check_smtp' command definition
define command{
        command_name    check_smtp
	command_line	$USER1$/check_smtp -H $HOSTADDRESS$ -t 20
        }


# 'check_tcp' command definition
define command{
	command_name	check_tcp
	command_line	$USER1$/check_tcp -H $HOSTADDRESS$ -p $ARG1$ -w $ARG2$ -c $ARG3 -4
	}


# 'check_udp' command definition
#define command{
#	command_name	check_udp
#	command_line	$USER1$/check_udp -H $HOSTADDRESS$ -p $ARG1$ $ARG2$
#	}


# 'check_nt' command definition
define command{
	command_name	check_nt
	command_line	$USER1$/check_nt -H $HOSTADDRESS$ -p 1248 -v $ARG1$ -l $ARG2$ -w $ARG3$ $ARG4$
	}

# Check number of messages in an IMAP inbox
define command {
	command_name	check_imap_count
	command_line	$USER1$/gwn_check_imap_count $HOSTADDRESS$ $ARG1$ $ARG2$ $ARG3$ $ARG4$ $ARG5$
}

# check connection to adserver.gwn
define command {
	command_name	check_adserver
	command_line	$USER1$/check_nrpe -t 40 -H $HOSTADDRESS$ -c check_ping -a adserver.gwn
}

define command {
	command_name	check_ExecDashboard_utilization
	command_line	$USER1$/gwn_check_executive_dashboard
}

# checks for tasks that send patient names to GWN email addresses
define command {
	command_name	check_tasks_info
	command_line	$USER1$/gwn_check_tasks $HOSTADDRESS$
}

# CMM CHECK FOR AUTH PAGE GO CRITICAL IF ANYTHING ELSE
define command{
     command_name    check_cmm_401
     command_line    $USER1$/check_http -S -H $HOSTADDRESS$ -e 401
	}

define command {
	command_name	check_hillrom_http
	command_line	$USER1$/check_nrpe -t 120 -H $HOSTADDRESS$ -c 'check_hillrom_http' $ARG1$
}

# 'process-service-perfdata' command definition
define command{
	command_name	process-service-perfdata
	command_line	/usr/bin/printf "%b" "$LASTSERVICECHECK$\t$HOSTNAME$\t$SERVICEDESC$\t$SERVICESTATE$\t$SERVICEATTEMPT$\t$SERVICESTATETYPE$\t$SERVICEEXECUTIONTIME$\t$SERVICELATENCY$\t$SERVICEOUTPUT$\t$SERVICEPERFDATA$\n" >> /var/lib/nagios/service-perfdata.out
	}


# Check for the custom SSL certificate using SNI
define command {
    command_name check_expired_custom_ssl
    command_line $USER1$/check_http --ssl --sni -C 60 -H $ARG1$ -I $HOSTADDRESS$
}


# Useless old check to be decommissioned:
define command{
    command_name check_expired_ssl
    command_line /usr/lib/nagios/plugins/check_http \
	--ssl -C 60 -H '$_HOSTALIAS_IP$'
}
 
define command {
   command_name      check_update_status
   command_line         /usr/lib/nagios/plugins/check_nrpe -H $HOSTADDRESS$ -c check_unattended_upgrades
}

define command {
  command_name  check-nagios-process
  command_line  $USER1$/check_procs -a nagios
}

define command {
  command_name	check-nginx-alive
  command_line	$USER1$/check_procs -a nginx
}

define command {
	command_name	self-nagios
  command_line	$USER1$/check_nagios -t 20 -e 5 -F /var/log/nagios/nagios.log -C /usr/sbin/nagios
}

define command {
	command_name	marbella-census
	command_line	$USER1$/gwn_check_sysinfo $HOSTADDRESS$ $ARG1$ $ARG2$ $ARG3$ $ARG4$ $ARG5$ $ARG6$ $ARG7$
}


###############################################################################
# Custom checks (Angelo)
###############################################################################

# 'check_http' command definition for nginx, passing URL as 1st argument 
define command{
        command_name    check_http_nginx
        command_line    $USER1$/check_http -t 180 -H $HOSTADDRESS$ -e 200,302,301 -S -u $ARG1$
}
